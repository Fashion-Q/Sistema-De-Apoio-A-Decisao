-- Scripts ddl para o ambiente operacional
use master
drop database if exists hawkmart
create database hawkmart
use hawkmart

CREATE TABLE AVALIACAO(
	COD_AVALIACAO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
)

CREATE TABLE LOCALIDADE(
	COD_LOCALIDADE INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	CIDADE VARCHAR(100) NOT NULL,
	ESTADO VARCHAR(100) NOT NULL,
	SIGLA_ESTADO CHAR(2) NOT NULL CHECK (LEN(SIGLA_ESTADO) = 2),
	INDEX idx_cidade (CIDADE),
	INDEX idx_estado (ESTADO),
	INDEX idx_SIGLA_ESTADO (SIGLA_ESTADO)
)

CREATE TABLE CLIENTE(
	COD_CLIENTE INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	NOME VARCHAR(100) NOT NULL,
	CPF VARCHAR(11) NOT NULL CHECK (LEN(CPF) = 11),
	EMAIL VARCHAR(200) NOT NULL,
	SEXO CHAR(2) NOT NULL CHECK(LEN(SEXO) = 2),
	COD_LOCALIDADE INT NOT NULL,
	CONSTRAINT FK_LOCALIDADE FOREIGN KEY (COD_LOCALIDADE)
	REFERENCES LOCALIDADE(COD_LOCALIDADE)
)

CREATE TABLE TB_STATUS (
  COD_STATUS INT NOT NULL IDENTITY(1,1) PRIMARY KEY (COD_STATUS),
  STATUS VARCHAR(50) NOT NULL CONSTRAINT DF_Status_Status DEFAULT 'AGUARDANDO PAGAMENTO',
)
--('AGUARDANDO PAGAMENTO', 'PAGAMENTO EFETUADO', 'PRODUTO EM ANDAMENTO',
--'PRODUTO ENTREGUE', 'CANCELADO') NOT NULL DEFAULT 'AGUARDANDO PAGAMENTO',
CREATE TABLE CATEGORIA(
	COD_CATEGORIA INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	CATEGORIA VARCHAR(100) NOT NULL,
	INDEX idx_CATEGORIA (CATEGORIA)
)

CREATE TABLE SUBCATEGORIA (
  COD_SUBCATEGORIA INT NOT NULL IDENTITY(1,1),
  SUBCATEGORIA VARCHAR(80) NOT NULL,
  COD_CATEGORIA INT NOT NULL,
  PRIMARY KEY (COD_SUBCATEGORIA),
  INDEX IDX_SUBCATEGORIA_SUBCATEGORIA (SUBCATEGORIA),
  CONSTRAINT FK_ID_CATEGORIA_CATEGORIA
  FOREIGN KEY (COD_CATEGORIA)
  REFERENCES CATEGORIA (COD_CATEGORIA)
);


CREATE TABLE PRODUTO (
  COD_PRODUTO INT NOT NULL IDENTITY(1,1),
  PRODUTO VARCHAR(80) NOT NULL,
  COD_SUBCATEGORIA INT NOT NULL,
PRIMARY KEY (COD_PRODUTO),
  INDEX INDEX_PRODUTO (PRODUTO),
  CONSTRAINT FK_ID_SUBCATEGORIA_SUBCATEGORIA
    FOREIGN KEY (COD_SUBCATEGORIA)
    REFERENCES SUBCATEGORIA (COD_SUBCATEGORIA)
)




CREATE TABLE PAGAMENTO (
  COD_PAGAMENTO INT NOT NULL IDENTITY(1,1),
  PAGAMENTO VARCHAR(50) NOT NULL,
  PRIMARY KEY (COD_PAGAMENTO),
  INDEX INDEX_PAGAMENTO (PAGAMENTO)
)
-- DEBITO CREDITO PIX BOLETO

CREATE TABLE LOJA (
  COD_LOJA INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
  LOJA VARCHAR(80) NOT NULL,
  CNPJ VARCHAR(14) NOT NULL,
  EMAIL VARCHAR(200) NOT NULL,
  COD_LOCALIDADE INT NOT NULL,
  CONSTRAINT FK_LOJA_LOCALIDADE_LOCALIDADE
    FOREIGN KEY (COD_LOCALIDADE)
    REFERENCES LOCALIDADE (COD_LOCALIDADE),
	INDEX INDEX_LOJA (LOJA)
)

CREATE TABLE ESTOQUE (
  COD_ESTOQUE INT NOT NULL IDENTITY(1,1),
  COD_PRODUTO INT NOT NULL,
  COD_LOJA INT NOT NULL,
  QUANTIDADEESTOQUE INT NOT NULL,
  QUANTIDADEVENDIDA INT NOT NULL DEFAULT 0,
  REAJUSTES INT NOT NULL DEFAULT 0,
  DATA DATETIME NOT NULL DEFAULT GETDATE(),
  PRIMARY KEY (COD_ESTOQUE),
  CONSTRAINT FK_ESTOQUE_LOJA
    FOREIGN KEY (COD_LOJA)
    REFERENCES LOJA (COD_LOJA),
  CONSTRAINT FK_ESTOQUE_PRODUTO
    FOREIGN KEY (COD_PRODUTO)
    REFERENCES PRODUTO (COD_PRODUTO)
);

CREATE TABLE VENDA (
  COD_VENDA INT NOT NULL IDENTITY(1,1),
  COD_CLIENTE INT NOT NULL,
  COD_AVALIACAO INT NOT NULL,
  COD_PAGAMENTO INT NOT NULL,
  COD_STATUS INT NOT NULL,
  DATA DATETIME NOT NULL DEFAULT GETDATE(),
  PRIMARY KEY (COD_VENDA),
  CONSTRAINT FK_VENDA_AVALIACAO1
    FOREIGN KEY (COD_AVALIACAO)
    REFERENCES AVALIACAO (COD_AVALIACAO),
  CONSTRAINT FK_VENDA_CLIENTE1
    FOREIGN KEY (COD_CLIENTE)
    REFERENCES CLIENTE (COD_CLIENTE),
  CONSTRAINT FK_VENDA_PAGAMENTO1
    FOREIGN KEY (COD_PAGAMENTO)
    REFERENCES PAGAMENTO (COD_PAGAMENTO),
	CONSTRAINT FK_VENDA_STATUS
    FOREIGN KEY (COD_STATUS)
    REFERENCES TB_STATUS (COD_STATUS),
);


CREATE TABLE PRODUTOVENDA (
  COD_PRODUTOVENDA INT NOT NULL IDENTITY(1,1),
  VALOR DECIMAL(10,2) NOT NULL,
  DESCONTO DECIMAL(3,2) NOT NULL DEFAULT 1.00,
  ACAO VARCHAR(50) NOT NULL DEFAULT 'VENDIDO',
  COD_VENDA INT NOT NULL,
  COD_ESTOQUE INT NOT NULL,
  PRIMARY KEY (COD_PRODUTOVENDA),
  CONSTRAINT FK_PRODUTOVENDA_VENDA1
    FOREIGN KEY (COD_VENDA)
    REFERENCES VENDA (COD_VENDA),
  CONSTRAINT FK_PRODUTOVENDA_ESTOQUE1
    FOREIGN KEY (COD_ESTOQUE)
    REFERENCES ESTOQUE (COD_ESTOQUE)
);
--VENDIDO DEVOLVIDO
